(************************************************************
 *                      IMITATOR MODEL                      
 *
 * Railroad Gate Controller
 *
 * Description     : Simple model with 1 PTA only
 * Correctness     : "Crash" cannot happen
 * Source          : Own work
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 *
 * Created         : 2012/03/13
 * Last modified   : 2017/06/29
 *
 * IMITATOR version: 2.9
 ************************************************************)

var

(* Clocks *)
 	x, y
		: clock;

(* Parameters *)
	dApproach,  (* Time between the approach and the passing *)
	dStartDown, (* Time between the approach and the gate starting to go down *)
	dGetDown,   (* Time between the gate starts to lower, and the gate is closed *)
	p1
	
		: parameter;




(************************************************************)
automaton Machine
(************************************************************)
synclabs : endDown, startDown, approach, pass;
loc Machine_Approaching: invariant x <= 5 & x <= 2 +p1
	when x = 5 sync pass do {} goto Machine_Crash;
	when x = 2 sync startDown do {y := 0} goto Machine_Lowering;
loc Machine_Far: invariant True
	when True sync approach do {x := 0} goto Machine_Approaching;
loc Machine_Safe: invariant x <= 5
	when x = 5 sync pass do {x := 0, y := 0} goto Machine_Far;
loc Machine_Crash: invariant True
loc Machine_Lowering: invariant x <= 5 & y <= 2
	when y = 2 sync endDown do {} goto Machine_Safe;
	when x = 5 sync pass do {} goto Machine_Crash;

end (* system *)



(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	  loc[Machine]      = Machine_Far

	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& x = 0
	& y = 0

	(*------------------------------------------------------------*)
	(* Parameter constraints *)
	(*------------------------------------------------------------*)
	& dApproach >= 0
	& dStartDown >= 0
	& dGetDown >= 0
	& p1 >= 0
;


(************************************************************)
(* Property specification *)
(************************************************************)

property := unreachable loc[Machine] = Machine_Crash;


(************************************************************)
(* The end *)
(************************************************************)
end
