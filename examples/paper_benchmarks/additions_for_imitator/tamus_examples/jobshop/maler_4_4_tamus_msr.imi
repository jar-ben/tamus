--****************************************************--
--****************************************************--
--   Laboratoire Specification et Verification
--
--   Scheduling example
--
--   Romain Soulat
--
--   Last modified : 25/10/2011
--****************************************************--
--****************************************************--
--
--Job2_4: solution = 27
--
--J1: m3(1),m1(3),m2(6),m4(7)
--J2: m2(8),m3(5),m1(10),m4(4)
--
--****************************************************--
--****************************************************--

var 	x1, x2, x3, x4, s
		: clock;

	m1,m2,m3,m4
		: discrete;

	
	p0,
	p1,
	p2,
	p3,
	p4
		: parameter;

--****************************************************--
  automaton job1
--****************************************************--
synclabs: b1;
 
loc job1_I1: invariant True
	when m3 = 0 sync b1 do {x1 := 0, m3 := 1} goto job1_J1;
  
loc job1_J1: invariant x1 <= 6
	when  x1 <= 6 & x1 >= 6 sync b1 do {m3 := 0} goto job1_K1; 


loc job1_K1: invariant True
	when m1 = 0 sync b1 do {x1 := 0, m1 := 1} goto job1_L1;   
 
loc job1_L1: invariant x1 <= 1
	when  x1 <= 1 & x1 >= 1 sync b1 do {m1 := 0} goto job1_M1; 
 
loc job1_M1: invariant True
	when m2 = 0 sync b1 do {x1 := 0, m2 := 1} goto job1_N1;  
 
loc job1_N1: invariant x1 <= 3
	when  x1 <= 3& x1 >= 3 sync b1 do {m3 := 0} goto job1_P1; 
 
loc job1_P1: invariant True
	when m4 = 0 sync b1 do {x1 := 0, m4 := 1} goto job1_Q1;
 
loc job1_Q1: invariant x1 <= 7
	when  x1 <= 6 & x1 >= 7 -p0 sync b1 do {m3 := 0} goto job1_End1; 

loc job1_End1: invariant True

end -- job1

--****************************************************--
  automaton job2
--****************************************************--
synclabs: b2;

loc job2_I2: invariant True
	when m2 = 0 sync b2 do {x2 := 0, m2 := 1} goto job2_J2;

loc job2_K2: invariant True
	when m3 = 0 sync b2 do {x2 := 0, m3 := 1} goto job2_L2;

loc job2_End2: invariant True

loc job2_J2: invariant x2 <= 5
	when  x2 <= 5 & x2 >= 5 sync b2 do {m2 := 0} goto job2_K2;

loc job2_P2: invariant True
	when m4 = 0 sync b2 do {x2 := 0, m4 := 1} goto job2_Q2;

loc job2_Q2: invariant x2 <= 4
	when  x2 <= 4 & x2 >= 5-p2 sync b2 do {m4 := 0} goto job2_End2;

loc job2_N2: invariant x2 <= 7 +p1
	when  x2 <= 8 & x2 >= 8 sync b2 do {m1 := 0} goto job2_P2;

loc job2_L2: invariant x2 <= 10
	when  x2 <= 10 & x2 >= 10 sync b2 do {m3 := 0} goto job2_M2;

loc job2_M2: invariant True
	when m1 = 0 sync b2 do {x2 := 0, m1 := 1} goto job2_N2;

end -- job2
--****************************************************--
  automaton job3
--****************************************************--
synclabs: b3;

loc job3_M3: invariant True
	when m1 = 0 sync b3 do {x3 := 0, m1 := 1} goto job3_N3;

loc job3_L3: invariant x3 <= 1
	when  x3 <= 1 & x3 >= 1  sync b3 do {m4 := 0} goto job3_M3;

loc job3_I3: invariant True
	when m3 = 0 sync b3 do {x3 := 0, m3 := 1} goto job3_J3;

loc job3_N3: invariant x3 <= 5
	when  x3 <= 5 & x3 >= 5 sync b3 do {m1 := 0} goto job3_P3;

loc job3_Q3: invariant x3 <= 4
	when  x3 <= 4 & x3 >= 4 sync b3 do {m2 := 0} goto job3_End3;

loc job3_J3: invariant x3 <= 9
	when  x3 <= 8+p3 & x3 >= 9 sync b3 do {m3 := 0} goto job3_K3;

loc job3_P3: invariant True
	when m2 = 0 sync b3 do {x3 := 0, m2 := 1} goto job3_Q3;

loc job3_K3: invariant True
	when m4 = 0 sync b3 do {x3 := 0, m4 := 1} goto job3_L3;

loc job3_End3: invariant True

end -- job3
--****************************************************--
  automaton job4
--****************************************************--
synclabs: b4;

loc job4_N4: invariant x3 <= 9
	when  x4 <= 8 & x4 >= 9-p4 sync b4 do {m3 := 0} goto job4_P4;

loc job4_I4: invariant True
	when m2 = 0 sync b4 do {x4 := 0, m2 := 1} goto job4_J4;

loc job4_M4: invariant True
	when m3 = 0 sync b4 do {x4 := 0, m3 := 1} goto job4_N4;

loc job4_K4: invariant True
	when m1 = 0 sync b4 do {x4 := 0, m1 := 1} goto job4_L4;

loc job4_J4: invariant x3 <= 3
	when  x4 <= 3 & x4 >= 3  sync b4 do {m2 := 0} goto job4_K4;

loc job4_End4: invariant True

loc job4_P4: invariant True
	when m4 = 0 sync b4 do {x4 := 0, m4 := 1} goto job4_Q4;

loc job4_Q4: invariant x3 <= 1
	when  x4 <= 1 & x4 >= 1  sync b4 do {m4 := 0} goto job4_End4;

loc job4_L4: invariant x3 <= 3
	when  x4 <= 3 & x4 >= 3  sync b4 do {m1 := 0} goto job4_M4; 

end -- job4



--****************************************************--
--****************************************************--
-- ANALYSIS
--****************************************************--
--****************************************************--

var init	: region;

init :=
	----------------------
	-- Initial locations
	----------------------
	  loc[job1] = job1_I1
	& loc[job2] = job2_I2
	& loc[job3] = job3_I3
	& loc[job4] = job4_I4

	& m1=0 & m2=0 	& m3=0 & m4=0 
	----------------------
	-- Clocks
	----------------------
	& x1=0 
	& x2=0
	& x3=0
	& x4=0
	& s=0
	----------------------
	-- Durations 
	----------------------
(*	& d11=1
	& d12=3
	& d13=6
	& d14=7

	& d21=8
	& d22=5
	& d23=10
	& d24=4

	& d31=5
	& d32=4
	& d33=9
	& d34=1

	& d41=9
	& d42=3
	& d43=3
	& d44=1*)
	
	& p0 >= 0
	& p1 >= 0
	& p2 >= 0
	& p3 >= 0
	& p4 >= 0
;

(************************************************************)
(* The end *)
(************************************************************)

end
