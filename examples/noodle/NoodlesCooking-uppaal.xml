<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>
/************************************************************
 * File automatically generated by IMITATOR
 * Version  : IMITATOR 2.12.1 "Butter Lobster" (build 3061)
 * Git      : master/4e8b1c8
 * Model    : 'benchmarks/Noodles/NoodlesCooking.imi'
 * Generated: Thu Aug 27, 2020 11:46:20
 ************************************************************/
/* Clocks declarations */
clock xPot, xTimer;

/* Parameters declarations */
const int dPot = 30 /* TODO: add your favorite value here */;
const int dTimer = 15 /* TODO: add your favorite value here */;

/* Action declarations */
broadcast chan startTimer;
broadcast chan ring;
broadcast chan boilover;
broadcast chan miam;

	/*------------------------------------------------------------*/
	/* Initial constraint (not interpreted by Uppaal)             */
	/*------------------------------------------------------------*/
	 /*  dPot &gt;= 0 &amp;&amp; dTimer &gt;= 0 &amp;&amp; xPot == 0 &amp;&amp; xTimer == 0 */
</declaration>
	<template>
		<name x="0" y="0">Noodle</name>
		<declaration>// No local declaration for automaton 'system'
</declaration>
		<location id="id0" x="0" y="0">
			<name x="0" y="-40">heating</name>
			<label kind="invariant" x="0" y="40">xPot &lt;= 30</label>
		</location>
		<location id="id1" x="200" y="0">
			<name x="200" y="-40">ticking</name>
			<label kind="invariant" x="200" y="40">xPot &lt;= 30 &amp;&amp; xTimer &lt;= 15</label>
		</location>
		<location id="id2" x="400" y="0">
			<name x="400" y="-40">cooked</name>
			<label kind="invariant" x="400" y="40">xPot &lt;= 30</label>
		</location>
		<location id="id3" x="600" y="0">
			<name x="600" y="-40">eating</name>
		</location>
		<location id="id4" x="800" y="0">
			<name x="800" y="-40">catastrophe</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="100" y="80">startTimer!</label>
			<label kind="assignment" x="100" y="-40">xTimer = 0</label>
			<nail x="102" y="0"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id4"/>
			<label kind="guard" x="400" y="40">xPot &lt;= 30 &amp;&amp; xPot &gt;= 30</label>
			<label kind="synchronisation" x="400" y="80">boilover!</label>
			<nail x="408" y="-238"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="300" y="40">xTimer &lt;= 15  &amp;&amp; xTimer &gt;= 15</label>
			<label kind="synchronisation" x="300" y="80">ring!</label>
			<nail x="306" y="0"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="guard" x="500" y="40">xPot &lt;= 30 &amp;&amp; xPot &gt;= 30</label>
			<label kind="synchronisation" x="500" y="80">boilover!</label>
			<nail x="544" y="212"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="500" y="40">xPot &lt;= 30 &amp;&amp; xPot &gt;= 30</label>
			<label kind="synchronisation" x="500" y="80">miam!</label>
			<nail x="510" y="0"/>
		</transition>
	</template>
	<system>
// List one or more processes to be composed into a system.
noodle = Noodle();
system noodle;
</system>
	<queries>
		<query>
			<formula>E&lt;&gt; noodle.catastrophe</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
